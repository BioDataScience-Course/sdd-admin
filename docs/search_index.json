[
["index.html", "BioDataScience Administration Préambule", " BioDataScience Administration Philippe Grosjean &amp; Guyliann Engels 2020-05-28 Préambule Notre organisation BioDataScience-Course sur Github devient de plus en plus complexe avec le temps car nous combinons plusieurs outils différents pour fournir à nos étudiants un environnement de travail et du matériel pédagogique riches et variés. Ce bookdown centralise l’information nécessaire pour les enseignants et les administrateurs de ces outils. Le matériel dans cet ouvrage est distribué sous licence CC BY-NC-SA 4.0. Détails concernant le système utilisé pour compiler ce bookdown… Information système sessioninfo::session_info() # ─ Session info ─────────────────────────────────────────────────────────────── # setting value # version R version 3.6.3 (2020-02-29) # os macOS Catalina 10.15.4 # system x86_64, darwin15.6.0 # ui X11 # language (EN) # collate en_US.UTF-8 # ctype en_US.UTF-8 # tz Europe/Brussels # date 2020-05-28 # # ─ Packages ─────────────────────────────────────────────────────────────────── # package * version date lib source # assertthat 0.2.1 2019-03-21 [1] CRAN (R 3.6.0) # bookdown 0.18 2020-03-05 [1] CRAN (R 3.6.0) # cli 2.0.2 2020-02-28 [1] CRAN (R 3.6.0) # crayon 1.3.4.9000 2020-04-29 [1] Github (r-lib/crayon@dcf6d44) # digest 0.6.25 2020-02-23 [1] CRAN (R 3.6.0) # evaluate 0.14 2019-05-28 [1] CRAN (R 3.6.0) # fansi 0.4.1 2020-01-08 [1] CRAN (R 3.6.0) # glue 1.4.0 2020-04-03 [1] CRAN (R 3.6.2) # htmltools 0.4.0.9003 2020-04-29 [1] Github (rstudio/htmltools@984b39c) # knitr 1.28 2020-02-06 [1] CRAN (R 3.6.0) # magrittr 1.5 2014-11-22 [1] CRAN (R 3.6.0) # rlang 0.4.5 2020-03-01 [1] CRAN (R 3.6.0) # rmarkdown 2.1 2020-01-20 [1] CRAN (R 3.6.0) # sessioninfo 1.1.1 2018-11-05 [1] CRAN (R 3.6.0) # stringi 1.4.6 2020-02-17 [1] CRAN (R 3.6.0) # stringr 1.4.0 2019-02-10 [1] CRAN (R 3.6.0) # withr 2.2.0 2020-04-20 [1] CRAN (R 3.6.2) # xfun 0.13 2020-04-13 [1] CRAN (R 3.6.2) # yaml 2.2.1 2020-02-01 [1] CRAN (R 3.6.0) # # [1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library "],
["intro.html", "Chapitre 1 Introduction", " Chapitre 1 Introduction Chaque section couvre un outil en particuliers, avec la section 2 qui présente la façon dont les différents outils sont assemblés pour réaliser notre environnement de travail pour les cours de Science des Données Biologiques à l’UMONS. "],
["general.html", "Chapitre 2 Organisation générale", " Chapitre 2 Organisation générale Les divers outils logiciels que nous utilisons pour créer un environnement d’apprentissage riche et varié pour nos étudiants se basent pour la plupart sur des solutions Open Source et sur différents serveurs. R est le logiciel principal de statistique, visualisation et manipulation des données que nous enseignons à nos étudiants en même temps que les concepts de statistique et science des données eux-mêmes. C’est un logiciel puissant et gratuit que l’étudiant pourra s’approprier plus tard pour faire ses analyses tout au long de sa carrière s’il le souhaite. R est préféré à Python ici car il est plus orienté statistiques et moins programmation, ce qui convient mieux à nos étudiants biologistes. Rstudio en version serveur pour nos étudiants, ou en version serveur ou desktop pour les enseignants, couplé à R Markdown permet d’éditer du code R et des rapports ou autres documents au format R Markdown. Git est un système de gestion de version largement utilisé en programmation et de plus en plus utilisé en science des données. Combiné à R, RStudio et R Markdown, il offre la possibilité de travailler de manière reproductible. Nous ensignons git en même temps que les outils plus orientés science des données à prporement parler avec d’amener nos étudiants à prendre des bonnes habitudes en matière de traçabilité et reproductibilité de leurs analyses. Nous avons choisi Github comme système d’hébergement des dépôts git sur le Net, parce qu’il est gratuit, puissant, universellement utilisé et qu’il est couplé à RStudio. L’interface git et Github de RStudio rend son utilisation simple, et Github Desktop complète l’ensemble pour effectuer des tâches non reprises dans l’interface git de RStudio. Enfin, Github Classroom est une extension permettant de gérer les nombreux dépôts créés par nos étudiants dans le cadre de leur formation. La SciViews Box est une machine virtuelle sous VirtualBox totalement préconfigurée. Nous créons une SciViews Box chaque année avec tous les logiciels nécessaires aux étudiants mais pas seulement: il s’agit aussi d’une machine virtuelle permettant de réaliser de nombreuses analyses de façon parfaitement reproductible. Faire installer tous les logiciels nécessaires par les étudiants n’est pas possible. Plusieurs solutions s’offrent à nous : Utiliser RStudio cloud serait la solution la plus simple au départ car l’étudiant n’a qu’à se logger et c’est parti. Même avec un chromebook, il peut y ttravailler. Cependant, la session n’est disponible que pour le cours et l’étudiant doit tout installer sur son ordinateur ensuite s’il veut continuer à les utiliser. cela nous parait être une bariière importante à l’adoption de ces outils, même si beaucoup de (grandes) universités ont choisi cette voie. Utiliser Docker et Rocker qui est une solution de containerisation pour R et RStudio. Si ces outils fonctionnent bien en production, nous les avons trouvés moins pratiques que la machine virtuelle pour nos étudianbts, surtout dans un contexte où la quesi-totalité des ordinateurs utilisés sont sous Winodws ou MacOS. Enfin, la solution de la machine virtuelle avec la SciViews Box nous permet d’offrir une série d’autres logiciels en version interface graphique (sous Xubuntu). A l’usage, cela fonctionne bien, mais l’installation était encore un peu laborieuse lorsqu’elle devait se faire à la main dans VirtualBox. Nous avons donc conçu des logiciels annexes d’installation et de lancement de la machine virtuelle de sorte que celle-ci ne soit qu’à un clic souris de nos étudiants débutants ! A l’usage, cela fonctionne très bien. Nous avons un lanceur rapide par édition de SciViews Box, et ce, à la fois sous Windows et sous MacOS. Lanceur rapide de la SciViews Box 2019 Moodle est la plateforme d’apprentissage en ligne utilisée par notre université, l’UMONS. Si elle offre de nombreuses possibilités, il n’est pas possible d’y intégrer les outils d’apprentissage liés à R comme les learnrs (voir plus loin) et les ouvrages au format bookdown, voire encore des documents R Markdown. Nous essayons d’intégrer autoant que possible nos outils dans cette plateforme, mais nous sommes obligés de recourir à d’autres solutions pour pouvoir couvrir le panel des outils qui nous sont nécessaires (voir ci-après). Bookdown est un type de sortie R MArkdown multi-documents qui permet d’intégrer également des calculs et graphiques de R. Nous l’utilisons comme moyen de centraliser tout notre métériel pédagogique et l’organiser en modules qui sont autant de chapitres différents du bookdown. Nous avons également développé différentes extensions pour bookdown afin d’y intégrer tout ce que nous voulons (voir 4), et notamment des applications Shiny (voir 6) et des widgets h5p (voir 8). Un chapitre entier y est donc consacré. Shiny permet de créer des applications sous R avec interface graphique sur un browser web. Les possibilités sont pratiquement sans limites pour créer des applications interactives et démontrer les concepts “en live” à nos étudiants. Les applications Shiny sont intégrables dans bookdown, mais elles doivent être exécutées sur un serveur dédié. TODO: une phrase sur ce serveur. Un type particulier d’application Shiny est constitué par les learnrs. Ces documents interactifs présentent des exercices dans R et des choix multiples aux étudiants. Ces learnrs forment la base des outils d’apprentissage à domicile et aussi des examens théoriques de nos cours. H5p propose une large variété de widgets javascript intégrables dans une page web sous fiorme d’iframes pour varier et rendre plus efficace l’apprentissage. Il s’agit d’un logiciel gratuit open source, mais il faut installer son propre serveur sous Moodle, Wordpress ou Drupal. Des essais ont été fait sous Moodle de l’UMONS. Cela fonctionne, mais il apparait que les widgets h5p de Moodle ne sont pas intégrables dans un bookdown, en tous cas pas la version de test telle qu’elle était configurée. Nous avons donc décidé d’installer notre propre serveur Wordpress, essentiellement pour pouvoir faire tourner nos widgets h5p. Ce serveur est hébergé chez Gandi.net qui gère aussi le nom de domaine sciviews.org sous lequel nos créations sont servies sur le net, ainsi que les boites mails correspondantes, comme sdd@sciviews.org. Les vidéos relatives au cours sont hébergées sur Youtube dans un canal dédié BioDataScience-Course. La section relative aux vidéos (voir 9) explique aussi en détails comment nous créons ces vidéos et avec quels outils. Enfin, les données relatives à la progression des étudiants dans les learnrs sont collectées dans une base de données MongoDB hébergée sur le cloud MongoDB Atlas. La progression peut être suivie grâce aux rapports de progression (10). Ces nombreux outils et services devant collaborer entre eux pour fournir un environnement d’apprentissage complet et cohérent, il est important de les configurer et de les faire collaborer correctement. C’est le but principal du présent document que d’expliquer comment nous y arrivons. Les sections suivantes détaillent l’installation et la configuration de différents outils logiciels tandis que les paragraphes suivants dans la présente section reprennent quelques informations générales utiles. "],
["rgpd-droit-dauteur-plagiat.html", "2.1 RGPD, droit d’auteur &amp; plagiat", " 2.1 RGPD, droit d’auteur &amp; plagiat Les questions relatives aux données d’un point de vue plus légal sont traitées ici. 2.1.1 RGPD Le Règlement Général sur la Protection des Données ou RGPD (n° 2016/679) adopté par l’Union Européenne en 2016 régit la façon dont les données à caractère personnel peuvent être collectées et utilisées. Ce règlement est en faveur de l’utilisateur (ici l’étudiant). Il faut notamment son accord pour collected ses données personnelles. Or de telles données sont indispensables pour suivre la progression des étudiants, pouvoir les noter, etc. A l’UMONS, l’étudiant signe le document adéquant lors de son inscription. Ce document mets Moodle en confiormité, mais pas les outils externes. Nous devons donc préciser exectement ce que nous devons faire pour être en conformité avec la juriste de l’UMONS une fois tous nos outils mis en place. L’utilisateur doit avoir la possibilité d’effacer intégralement ses données personnelles s’il le souhaite lorsqu’il efface son compte d’un site. C’est explicitye dans le RGPD. Cependant, des restrictions à ceci sont indispensables pour la bonne gestion du suivi des étudiants à l’Université. C’est pour cela que l’étudiant a du signer un accord lors de son inscription. Afin d’être en conformité avec cette directive, j’ai rajouté un bouton Effacer mes données personnelles dans la première page des cours bookdown. L’utilisateur peut ensuite lire le contenu de manière anonyme et les activités learnr/Shiny apps ne sont pas enregistrées. Par contre, h5p est toujours enregistré et les données historiques antérieures sont toujours dans notre base de données. TODO: il faudra peut-être mettre en place un bouton qui permette de demander l’effacement de toutes les données, et qui pourrait êrtre utilisé pour les visiteurs non-UMONS pour être totalement en conformité RGOPD de ce point de vue. L’annonimisation des données est de mise lorsque ces données servent à une étude générale (par exemple, évolution des performances des cohortes d’étudiants avec les outils progressivement mis en place, études scientifiques, …). 2.1.2 Droit d’auteur … 2.1.3 Plagiat L’UMONS s’est doté d’un outil de détection du plagiat intégré à Moodle. Il reconnait les fichiers Word, PowerPoint et PDF. Malheureusement, il ne reconnait pas les PDF générés via LaTeX. Donc, il faut sortir soit en Word, soit faire un PDF depuis Word. Il faut intégrer les documents sous forme de devoirs dans Moodle pour pouvoir bénéficier de cette fonction, ce qui est très contraignants pour nous. TODO: réfléchir à des façons plus pratiques de mettre en œuvre l’anti-plagiat dans nos cours de Science des données. "],
["infos-utiles-concernant-le-dsi-umons.html", "2.2 Infos utiles concernant le DSI UMONS", " 2.2 Infos utiles concernant le DSI UMONS Les documents Comment ? expliquent comment réaliser pas mal de choses (connexion, gestion des mails, partage de fichiers, etc.). "],
["git.html", "Chapitre 3 Git &amp; Github", " Chapitre 3 Git &amp; Github Nous utilisons abondamment et enseignons l’usage de git et Github dans le cadre de nos cours de Science des Données Biologiques à l’UMONS. De plus, nous utilisons Github Classroom pour gérer la distribution des travaux aux étudiants sous forme de dépôts Github. Cette section couvre ces logiciels. "],
["installation-git-et-cie.html", "3.1 Installation Git et cie", " 3.1 Installation Git et cie Dans la SciViews Box, git, Github Desktop et RStudio server (incluant une interface vers git) sont préinstallés. Hors machine virtuelle, il faut installer git, RStudio et Github Desktop. Le reste se fait en interagissant avec Github via le navigateur web. "],
["biodatascience-course.html", "3.2 BioDataScience-Course", " 3.2 BioDataScience-Course L’organisation BioDataScience-Course regroupe tous les dépôts Github relatifs à nos cours, y compris les travaux des étudiants. 3.2.1 Convention de noms Comme l’organisation contient plusieurs centaines de dépôts, il est utile de les nommer correctement pour s’y retrouver. Les dépôts créés via Github Classroom seront traités plus loin. Voici quelques règles : Les dépôts important (matériel pédagogique, gestion des étudiants et de leur progression, …) commencent tous par sdd. Pour les dépôts moins importants ou de test, utiliser un autre préfixe. Lorsqu’un dépôt est relatif à une cohorte d’étudiants en particulier, nous l’indiquons par un suffixe reprenant les deux derniers chiffres de l’année initiale, suivi de m pour les étudiants montois et c pour les étudiants de Charleroi. Par exemple, sdd_students19m concerne la cohorte d’étudiants montois inscrits en premier cours (Bab2 de biologie) en 2019-2020. De même sdd_students20c concerne la cohorte d’étudiants de Charleroi inscrits en Bab2 en 2020-2021. "],
["github-classroom.html", "3.3 Github Classroom", " 3.3 Github Classroom Nous utilisons Github Classroom pour générer la distribution des travaux aux étudiants sous forme de dépôts Github. TODO: Guyliann: les éléments importants de la gestion de Github Classroom sont à présenter ici… TODO: intégration de Github Classroom avec Moodle, voir https://classroom.github.com/help/setup-moodle &amp; https://classroom.github.com/help/import-roster-from-lms. Une autre ressource intéressante dans le contexte de l’utilisation de Github/Github Classroom pour l’enseignement est Github Education. "],
["astuces-git-et-github.html", "3.4 Astuces Git et Github", " 3.4 Astuces Git et Github Quelques astuces qui nous sont utiles… Comparaison de branches sur Github : ajouter /compare à la fin de l’URL du dépôt et une page de comparaison de branche apparait. sinon, cette comparaison est aussi possible dans Github Desktop (menu Branch -&gt; Compare to Branch). Lorsqu’une branche n’est plus utile, elle peut être facilement éliminée depuis Github Desktop (entrée de menu Branch -&gt; Delete...). Cette branche doit être activée d’abord, et tous les commits doivent avoir été pushés. Il est conseillé d’éliminer la branche sur le serveur en même temps que la branche locale. La boite de dialogue d’élimination d’une branche dans Github Desktop. "],
["bookdown.html", "Chapitre 4 Bookdown", " Chapitre 4 Bookdown … TODO: trouver un moyen simple de mettre à jour les pages statiques bookdown des cours dans Wordpress (ainsi que les données pour les rapports de progression des étudiants dans /users). Un essai a été fait en passant les informations via le query string de l’URL et en utilisant le plugin Wordpress Variable shortcode. Celà donne quelque chose comme ceci : &lt;a href=&quot;https://wp.sciviews.org/test-bookdown?login=[sv slug=&#39;sc-username&#39;]&amp;amp;ghemail=[sv slug=&#39;sc-user-email&#39;]&amp;amp;displayname=[sv slug=&#39;sc-display-name&#39;]&amp;amp;firstname=[sv slug=&#39;sc-first-name&#39;]&amp;amp;lastname=[sv slug=&#39;sc-last-name&#39;]&quot;&gt; Ensuite, c’est à bookdown d’enregistrer ces variables dans le localStorage du browser Web. Cela fonctionne, mais n’est pas optimal. Nous préférons au final que ce soit la page wordpress appelée par Moodle qui récupère ces informations et les stockent dans localStorage. Du coup, le plugin Variable shortcode n’est plus nécessaire. Voir la configuration de Wordpress pour en savoir plus (5). "],
["wordpress.html", "Chapitre 5 Wordpress", " Chapitre 5 Wordpress Nous utilisons Wordpress principalement pour gérer nos widgets h5p. Cependant, étant basé sur un serveur LAMP (Linux-Apache-MySQL-PHP), il permet également de réaliser des fonctions basées sur des scripts côté serveur qui seraient difficiles, voire impossibles avec un site statique tel que l’offre bookdown, par exemple. Ainsi, nous pouvons aussi y intégrer un enregistrement de l’utilisateur via Github (protocole OAuth2). Ceci est bien pratique pour faire le lien entre le compte UMONS/Moodle et le compte Github de l’étudiant. En effet, en 2018-2019 et 2019-2020, nous avons travaillé uniquement avec un serveur statique bookdown hébergé sur Github. Si le résultat est correct, nous avons noté plusieurs problèmes : Pas d’enregistrement des étudiants, Pas de h5p. Nous pourrions utiliser https://h5p.org, mais cette plateforme n’est prévue que pour des tests, et ne permet pas de récupérer les activités des étudiants, Pas de service d’applis Shiny et de learnrs. Nous exécutons ces applis en local dans la SciViews Box via les packages R BioDataScience et BioDataScience2. Cela permet d’utiliser les learnrs, mais sans être vraiment très pratique pour les étudiants. Les learnrs qui y sont intégrés se connectent à la base de données MongoDB via une petite appli Shiny intégrée qui demande le login Github de l’étudiant et son email pour l’identifier. Toutefois, comme aucun contrôle n’est fait sur ce qu’il entre dans ces champs, nous avons eu beaucoup d’enregistrements fantaisistes qu’il a fallu régler grâce à une table de corrections appliquée aux données de la base. Au final, même si l’approche bookdown statique sur Github + learnr/Shiny en local dans la SciViews Box permet d’obtenir le minimum de fonctions requises pour le suivi de la progression d’apprentissage des étudiants, ce n’est pas pratique à l’usage et nous avons dû dépanner souvent des étudiants… sans compter leur stress de savoir si leur activité est bien enregistrée dans la base de données ou non (deux points sur vingt dans la note totale sont réservés à l’exécution de ces learnrs, d’où l’importance de bien enregistrer qui fait quoi). Donc, en 2020-2021, nous avons décidé de mettre en œuvre un serveur Wordpress pour fournir des widgets h5p qui nous manquent et dont l’utilisation est enregistrée (protocole xAPI), et aussi pour nous permettre de mettre en œuvre une authentification des étudiants plus fiable. Notre objectif est double au niveau de l’authentification de nos étudiants. D’une part, nous voulons obtenir de manière fiable à la fois leurs données UMONS (via Moodle) et leurs données Github, ce qui implique que ces données doivent être soit fournies automatiquement, soit vérifiées durant l’authentification. D’autre part, nous voulons pouvoir exécuter des applications Shiny en mode sécurisé pour, par exemple, leur offrir un rapport de progression calculé en direct. La nouvelle authentification se fait comme suit : Nous intégrons nos outils dans Moodle qui nous fournit alors l’authentification UMONS de l’étudiant. On obtient, entre autres, son numéro de matricule, son adresse email UMONS, son nom et son prénom, le cours qu’il suit, … Les détails sont dans la section correspondante (voir 7) et ne seront donc pas discutés ici. Par ailleurs, nous utilisons abondamment Github pour les exercices des étudiants. Leur login y est différent, et il est aussi possible qu’ils y aient indiqué une adresse email différente (même si nous leurs demandons de mettre la même). Dans Wordpress, nous pouvons intégrer une authentification sur base de leur compte Github via le protocole OAuth2. C’est doublement intéressant car nous avons leur réel login Github à tous les coups, et aussi, nous sommes certains que leur compte Github est créé et actif dès le moment où ils sont enregistrés dans Wordpress. Que des avantages, donc. De plus, dans l’implémentation choisie, la connexion via Github montre clairement à l’étudiant s’il est connecté ou non. Page principale du site lorsque l’utilisateur n’est pas connecté (au travers d’un login BioDataScience dans Github. La même page principale du site lorsque l’utilisateur est enregistré et connecté via Github. Dès que l’étudiant s’est enregistré, les données utiles venant de Github sont rentrées dans la table des utilisateurs Wordpress. Nous pouvons donc combiner cette information avec les données provenant de Moodle pour établir un profil complet de l’étudiant dans notre site Wordpress automatiquement. "],
["installation-wordpress.html", "5.1 Installation Wordpress", " 5.1 Installation Wordpress Notre nom de domaine sciviews.org est géré par https://gandi.net. Ce provider propose aussi un hébergement web Wordpress dans un serveur LAMP préconfiguré. Nous utilisons cette option pour l’instant en test. Le serveur utilise 1 cpu et 256Mo de RAM avec 20Go d’espace de stockage, et un quota de 300.000 pages vues par mois et 60Go par mois. Il est upgradable à tous niveau. Nous verrons comment il se comporte en charge avec nos étudiants et pourrons toujopurs passer vers un plan supérieur si des len teurs sont constatées. Le certificat SSL pour avoir une adresse sécurisée en https:// est inclu dans le package. Le serveur est installé initialement avec PHP 7.3 et une base de données MySQL 5.7 ne permettant que des requêtes locales. Wordpress est à la version 5.4.1. Nous avons installé les extensions suivantes : H5P 1.15.0. Il faut installer les libraires séparément et les principales ont été rajoutées dès le départ. Les 5 ou 6 widgets H5P que nous avions déjà créés sont facilement importés en les exportant de leur site original au format .h5p en cliquant sur le bouton reuse en bas à gauche du widget. Ensuite dans Wordpress, on va dans le tableau de bord -&gt; H5P Content, on clique Add New puis Téléverser et on sélectionne le ficher .h5p. Un backup de ces fichiers .h5p est également effectué sur p-cloud dans le dossier sdd_h5p_backup. Le plugin est ensuite configuré pour ne pas motrer la bannière h5p en bas des widgets et pour générer tous les événements xAPI possibles. SNORDIAN’s H5PxAPIkatchu 0.4.2 capture les événements xAPI générés par H5P et les stockent directement dans la base de données MySQL liée à Wordpress. Il y a une interface simpliste pour visualiser les tables, les filtrer et explrter au format CSV. Dans un premier cela nous servira, mais nous devrons développer une autre façon de récupérer les donner, voire, dériver un autre plugin pour envoyer les événements directement dans la même base de données MongoDB que celle utilisée par nos applis Shiny (voir 6). [Patché pour enregistrer les données dans MongoDB Atlas]. OAuth Single Sign On - SSO (OAuth Client) 6.15.2 configuré pour enregistrer et connecter un utilisateur via son compte Github. Pour permettre ceci une application Github nommée BioDataScience a été créée. La configuration de ce plugin est disponible depuis le tableau de bord de Wordpress -&gt; miniOrange -&gt; OAuth. Import Users from CSV 1.0.1 est un plugin permettant de créer des utilisateurs en batch depuis un fichier CSV. Nous pourrons ainsi exporter en bloc les données venant de Moodle et créer en avance les comptes Wordpress avec plein d’informations supplémentaires. Advanced iFrame Pro 2020.3 permet d’insérer un iframe avec plein d’options : sécurisation, adaptation de la taille, passage de paramètres, réécriture d’URL, etc. Nous utilisons ce plugin pour intégrer les bookdown dans le site Wordpress, et ainsi conserver la bannière supérieure de notre site tout en affichant le bookdown. Shortcode Variables 3.1.1 ajoute un shortcode [sv slug='...'] permettant d’y placer du texte prédéfini ou une variable système comme le nom ou l’email de l’utilisateur actuel, voir aussi 5.1.8. [éliminé plus tard] UpdraftPlus 1.16.24 comme système de backup de l’ensemble (fichiers Wordpress + base MySQL). Le backup se fait en local pour l’instant dans lamp0/web/vhosts/wp.sciviews.org/htdocs/wp-content/updraft, mais il est recopié sur notre disque p-cloud dans le dossier sdd_site_backup. Quelques autres plugins aidant à gére le site Wordpress : Broken Link Checker 1.11.12, Health Check &amp; Troubleshooting 1.4.4 &amp; WP-Optimize 3.0.19. Le site est servi à l’adresse https://wp.sciviews.org. Les enseignants y sont enregistrés comme éditeurs. En outre, un compte administrateur est aussi créé. Le serveur est accessible par SSH (après activation provisoire dans gandi) et sFTP. Toutes les informations nécessaires seront transmises aux intéressés par voie sécurisée. 5.1.1 Configuration serveur et git Simple hosting de gandi.net permet d’accéder aux fichiers sur le serveur de trois façons : Par sFTP (TODO: détails) Par Console SSH (TODO: détails). La console n’est pas active en permanence. Il faut l’activer dans le panneau de configuration du simple hosting sur Gandi.net. Cette activation reste valable pour 2 heures seulement par sécurité. Via git. C’est le plus simple pour développer et synchroniser son site. C’est d’ailleurs aussi la seule façon de faire pour ajouter des dépendances à PHP via composer (et nous aurons besoin de rajouter une dépendance par rapport à mongodb pour enregistrer les événements H5P xAPI dans notre base de données). 5.1.1.1 Sécurisation du site Wordpress Modification du fichier .htaccess dans htdocs. Afin d’éviter des attaques de type pingback xmlrpc sur le site wordpress, il faut rajouter la ligne suivante dans le fichier .htaccess : RewriteRule ^xmlrpc\\.php$ &quot;http\\:\\/\\/0\\.0\\.0\\.0\\/&quot; [R=301,L] 5.1.1.2 Utilisation de git Il faut git et un client SSH installé (pas de problèmes pour le Mac ou Linux). Les infos pour utiliser git sont dans la page du site wp.sciviews.org : git remote add gandi git+ssh://3693753@git.sd3.gpaas.net/wp.sciviews.org.git # Faire un push git push gandi master # Déployer ssh 3693753@git.sd3.gpaas.net deploy wp.sciviews.org.git Dans un premier temps, l’identification se fait via un mot de passe. Voici comment cloner le dépôt git à partir d’un répertoire racine de votre choix, mais nous aurons absolument besoin que ce répertoire racine soit le même que celui où les dépôts Github de BioDataScience-Course sont également placés (sur le Mac, il est facile de s’y placer en tapant cd suivi d’une espace, et puis en allant faire un drag&amp;drop du dossier depuis le Finder vers le terminal, puis d’exécuter cette commande). # Placezvous dans le bon dossier #cd &lt;dossier racine des dépôts BioDataScience-Course&gt; git clone git+ssh://3693753@git.sd3.gpaas.net/wp.sciviews.org.git Accepter (yes) pour le message relatif à l’authenticité, puis rentrer le mot de passe d’administration du site. Vérifier que les fichiers ont bien été rajoutés en comparant avec le contenu affiché dans Cyberduck avant de continuer. Avant de pouvoir effectuer un push via Github Desktop, il faut avoir configuré git correctement et avoir une clé SSH. git config --global user.name &lt;username&gt; git config --global user.email &lt;user@email.com&gt; # Générer une clé SSH pour l&#39;authentification ssh-keygen -t rsa -b 4096 -C &#39;&lt;user@email.com&gt;&#39; Une fois la clé SSH générée, copier le contenu de ~/.ssh/id_rsa.pub d’une part vers “SSH Keys” dans Github -&gt; Settings -&gt; SSH and GPG Keys, et d’autre part, dans le panneau principal Simple hosting de Gandi.net, dans la section sécurité, cliquer sur “Ajouter une clé SSH”. Puis créer une nouvelle clé et y coller le contenu. Essayez une petite modification anodine dnas votre dépôt git en local, puis commit et push. Ça doit fonctionner. Attention que les données qui sont poussées vers le serveur ne sont pas encore publiées à ce stade ! Il faut déployer ces changements en faisant : ssh 3693753@git.sd3.gpaas.net &#39;deploy wp.sciviews.org.git&#39; Le deploy ajoute des nouveaux fichiers et remplace les fichiers existants (à condition que le droit en écriture sur le fichier soit OK). Part contre, il n’élimine pas les fichiers. On risque donc d’accumuler des fichiers devenus inutiles ou fur et à mesure de l’édition des blogdown. Si cela ne devrait pas impacter l’affichage des pages, cela utilise inutilement de l’espace disque sur le serveur. donc, de temps en temps, il faut procéder à un nettoyage complet avec clean suivi d’un redéploiement. ssh 3693753@git.sd3.gpaas.net &#39;clean wp.sciviews.org.git&#39; Attention qu’un fichier .gitignore correct est indispensable ici. Les fichiers concernés par le .gitignore ne seront pas effacés. Tout le reste oui (faire un backup avant !). 5.1.2 Ajout de mongodb pour PHP Le serveur sur Gandi.net n’autorise qu’une seule manière de rajouter des dépendances pour PHP : via git + ssh en utilisant composer. Et il faut créer les ficihers composer.json et composer;lock sur la machine locale avant de pouvoir faire un push sur le serveur. cela signifie d’avoir php et la dépendance mongodb pour php installés localement. Malheureusement, malgré de nombreux essais infructueux, je n’ai pas réussi à installer mongodb pour PHP sur MacOS Catalina. apparemment, la nouvelle puce de sécurité T2 empêche de le faire. Par conséquent, j’ai du passer par une machine sous Ubuntu 18.04 (la machine virtuelle svbox2019) pour le faire. Voici la procédure : Installer PHP et les dépendances nécessaires. php --version # Version 7.2.17, alors que 7.3.11 sur le serveur sudo apt install php-mongodb # version 1.3.4-1build1 sudo apt install composer Ensuite, créer un dossier et y placer un fichier `com mkdir ~/php-mongodb cd ~/php-mongodb # Normalement composer require mongodb/mongodb devrait faire l&#39;affaire # mais ça ne marche pas ! # Par contre, créer composer.json manuellement echo &#39;{ &quot;require&quot;: { &quot;mongodb/mongodb&quot;: &quot;^1.0.0&quot; } }&#39; &gt; composer.json # Ensuite faire créer composer.lock par composer sur cette base composer update Ensuite, transférer le fichier composer.lock ainsi généré dans le dépôt git, faire un commit, un push, puis un deploy comme expliqué plus haut. Y lire les versions des extensions installées (mongodb 1.2.0 et ext-mongodb 1.3.0), aller voir la version de mongodb utilisée pour MongoDB Atlas et vérifier dans le tableau de compatibilité ici. Il faut ext 1.5 + lib 1.4 minimum pour php 7.3 =&gt; pas bon! Aussi pour MongoDB 4.2 et PHP 7.4, il faut au minimum ext 1.6 + lib 1.5. Donc, je charge une version plus récente de Xubuntu (20.04, depuis www.osboxes.org) afin de pouvoir faire le travail avec des versions plus récentes de php et mongodb. Cependant comme elle n’est pas dispo, je préfère la version Ubuntu server 20.04 moins volumineuse. OK, maintenant Ubuntu utilises uniquement la version 7.4 de PHP. J’ai regardé s’il y avait un moyen de vérifier que tous les plugins qu’on utilise dans Wordpress sont compatibles avec PHP 7.4 (on peut faire l’upgrade, mais on ne peux pas downgrader après !). Il y a un plugin php compatibility checker mais celui-ci est limité à la version 7.3 max de php et ça fait des mois qu’ils promettent une version pour 7.4… mais rien. donc, je préfère rester en 7.3. Ce qui m’oblige à installer un Xubuntu 19.10 (disque intial de 5.9Go). Changement de clavier, ajout de permissions pour accéder au dossier partagé (MacDesktop), mise-à-jour, et on est prêt à travailler (utilisateur osboxes, mot de passe osboxes.org)… sudo usermod -aG vboxsf osboxes sudo apt update sudo apt upgrade sudo apt autoremove sudo apt autoclean sudo apt clean sudo reboot Install php, php-mongodb &amp; composer. sudo apt install php7.3-cli sudo apt install php-pear sudo apt install php-mongodb sudo apt install composer Ensuite, c’est reparti ! mkdir /media/sf_MacDesktop/php-mongodb cd /media/sf_MacDesktop/php-mongodb # Normalement composer require mongodb/mongodb devrait faire l&#39;affaire # mais ça ne marche pas ! # Par contre, créer composer.json manuellement echo &#39;{ &quot;require&quot;: { &quot;mongodb/mongodb&quot;: &quot;^1.5.0&quot; } }&#39; &gt; composer.json # Ensuite faire créer composer.lock par composer sur cette base composer update Tout cela ne fonctionne pas et se plaint constamment d’incompatibilité de versions ! Tentative d’installation avec pecl sudo apt install php7.3-dev sudo pecl install mongodb # mongodb 1.7.4 mkdir /media/sf_MacDesktop/php-mongodb cd /media/sf_MacDesktop/php-mongodb composer require mongodb/mongodb # Version 1.6.0 apparemment Maintenant, copier composer.json et composer.lock à la racide du dépôt git, faire un commit, un push et un deploy. Cette fois-ci mongodb 1.6.0 semble s’être bien installé. Je reteste dans Wordpress… et cette fois-ci c’est bon, ça maaaarche! 5.1.3 Login et enregistrement de la progression Pour l’instant, le login dans le site Wordpress est réaliser via le compte Github de l’étudiant comme expliqué plus haut. Cela permet de récupérer des infos sur le compte Github comme le logiun, ou l’adresse mail primaire associé. Si la page principale est lancée depuis Moodle, nous injectons également des données issues de Moodle et donc, les infos UMONS de l’étudiant comme son nom, son email UMONS, son numéro de matricule, etc. De cette manière, nous arrivons à combiner toutes les infos qui nous sont nécessaire pour gérer correctement le compte de chaque étudiant et enregistrer sa progression. Une fois le compte créé dans Wordpress, l’étudiant a la possibilité de modifier des informations, dont son adresse email. S’il le fait, cette adresse n’est alors plus synchrone avec celle de Github (à tester). C’est toutefois cette addresse email enregistrée dans Wordpress qui est employée pour enregistrer les activités h5p, et le sera aussi pour les learnr et les app Shiny dans une certaine mesure. En effet, pour ces derniers, le choix de l’identifiant est le suivant : (1) l’email du compte Wordpress (donc le même que Guthub initialement), (2) si vide, l’email UMONS, (3) si vide, le login Github. Si aucune des trois infos n’est disponible, nous n’enregistrons pas l’activité learnr et app Shiny, et l’outil de test en début de bookdown indique clairement que la navigation se fait de manière anonyme. Par contre, il me semble (à tester) que H5xAPIkatchu enregistre l’activité h5p sous un UUID créé à la volée. Même si c’est le cas, nous pouvons toujours filtrer et éliminer ces données-là plus tard. Par ailleurs, il est possible d’enregistrer les événements principaux h5p (soumission des exercices) dans Wordpress directement. Je pense (à vérifier) que cette fonction est associée à l’enregistrement d’état des contenus h5p d’une session à l’autre. Cette info est redondante avec H5PxAPIkatchu, mais elle est utile car l’étudiant a accès à h5p en lecture seule dans le tableau de bord, et il peut y lire les détails de sa progression dans l’ensemble des exercices h5p de tous les cours, s’il le souhaite (voir capture d’écran). Reste à déterminer l’occupation disque de cette fonction ! Suivi de la progression H5P dans le tableau de bord accessible aux étudiants. Comme nous pouvons le voir, le tableau de bord de l’étudiant est réduit au minimum. En plus de la partie “H5P Content” où il peut voir et filtrer la liste des applis H5P et voir ses propres résultats H5P, il a accès à son profil où il peut modifier des données utilisées par nos outils comme displayname, email, firstname, lastname. Il ne peut pas modifier son login (alias “identifiant” dans Wordpress). De plus, comme nous croisons avec les données UMONS issues de Moodle, nous aurons toujours à disposition des informations permettant d’identifier les étudiants. Par contre, je crois que la possibilité de modifier ces informations par l’étudiant (utilisateur) lui-même fait partie des contraintes RGPD pour lesquelles Wordpress assure la compatibilité. 5.1.4 Intégration des bookdowns dans le site Pour l’instant, il y a deux versions : Science des données biologiques 1 renvoie vers le bookdown de test directement. A partir de ce moment, nous perdons le contrôle et c’est le bookdown qui doit tout gérer… or comme c’est une page statique, les possibilités sont limitées à du JavaScript qu’on aurait été y mettre, Science des données biologiques 3 revoie à la même page, mais intégrées sous forme d’iframe dans une page de Wordpress dédiée. Nous utilisons le plugin Advanced iFrame qui permet de contrôler la taille de l’iframe, de lui passer des paramètres et encore d’autres choses. Cela donne pas mal, et l’utilisateur conserve la barre d’outils supérieure (accès à Moodle, Discord, etc.) S’il veut lire le contenu du bookdown sans voir cette barre, il lui suffit de faire coulisser la page jusque tout en bas et la barre de menu du site sera cachée. 5.1.5 Intégration des h5p dans bookdown H5p s’affiche dans un iframe dans le document principal. Il lui transmet les événements xAPI, et c’est donc ce document principal qui doit les traiter. Nous avons ici une impossibilité à le faire si nous sommes dans un cas où h5p est servi par un serveur différent que notre bookdown. En effet, les accès en “Cross-Origin Resource Sharing” ou CORS sont restreintes pour éviter des attaques de site évidentes. Ainsi un iframe issu d’un serveur différent de la page qui l’héberge ne peut communiquer librement avec la page qui le contien si elle provient d’un site différent. Or, nous avons besoin de cette communication pour transmettre les événements xAPI de h5p. La solution que nous avons trouvée est d’ajouter le dossier qui contient nos pages statiques du bookdown à Wordpress directement. Ainsi les deux sont maintenanrt servis à partir de la même adresse https://wp.sciviews.org. Pour l’instant, nous copions simplement ces fichiers dans un sous dossier sdd-umons dans lamp0/web/vhosts/wp.sciviews.org/htdocs. Ainsi, le bookdown en question est servi par Wordpress à l’adresse https://wp.sciviews.org/sdd-umons. Et à présent, la communication des xAPI h5p est possible… à condition d’ajouter le code nécessaire dans bookdown. Nous créons un fichier header.html dans bookdown qui contient ce code, extrait du serveur Wordpress, puisque nous sommes dedans maintenant. Il suffit alors de le reseigner dans l’entête YAML du fichier principal index.Rmd comme : includes: in_header: header.html et le tour est joué. Il nous faut maintenant inclure facilement les widgets h5p depusi Wordpress dans nos pages bookdown. Ces widgets sont identifiés par un numéro (ID) dans Wordpress. H5P content dans Wordpress. Les widgets sont identifiés par leur ID (ici, 6, 7, 8, 9 &amp; 10). Nous devons créer un iframe dans la page bookdown, mais nous pouvons déléguer ce travail à une fonction R : h5p &lt;- function(id, width = 780, height = 500) { glue::glue(&quot;\\n&lt;iframe src=\\&quot;https://wp.sciviews.org/wp-admin/admin-ajax.php?action=h5p_embed&amp;id={id}\\&quot; width=\\&quot;{width}\\&quot; height=\\&quot;{height}\\&quot; frameborder=\\&quot;0\\&quot; allowfullscreen=\\&quot;allowfullscreen\\&quot; class=\\&quot;h5p\\&quot;&gt;&lt;/iframe&gt;&lt;script src=\\&quot;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-resizer.js\\&quot; charset=\\&quot;UTF-8\\&quot;&gt;&lt;/script&gt;\\n&quot;) } Ensuite, ajouter un widget h5p est aussi simple que d’ajouter h5p(id) dans du code R en ligne où “id” est l’ID tel que renseigné dans le tableau sous Wordpress. On peut aussi jouer sur les arguments width= et height= pour ajuster l’emplacement du widget h5p dans la page. Ainsi programmé notre widget h5p se comporte comme suit : pour un utilisateur enregistré dans Wordpress, les événements xAPI sont enregistrés dans notre base de données MySQL. Nous pouvons donc suivre la progression de nos étudiants via les widgets h5p également, en plus des applis widgets et des learnrs. De plus, l’état d’achèvement de l’exercice est aussi enregistré pour un bon nombre de widgets et rétabli lorsque la page est rechargée par le même utilisateur. pour un utilisateur non enregistré, les widgets h5p fonctionnent normalement, mais aucun événement xAPI n’est enrgistré, et l’état de complétude de l’exercice n’est pas conservé non plus. Si la page est rechargée, les widgets h5p retournent à leur état initial à chaque fois. Ceci est un inconfort mineur et permet l’utilisation des widgets h5p de manière optimale pour nos étudiants dûment enregistrés, tout en permettant une libre utilisation par d’autres visiteurs sans polluer notre base de données. Nous avons également tenté de passer des arguments supplémentaires via l’URL qui lance la page bookdown, et qui les tranfèrent vers l’iframe h5p, mais sans succès car apparemment Worpress réécrit l’URL et laisse tomber ces arguments supplémentaires. C’est pas important si nous pouvons tracer nos utilisateurs via leur login (= login Github pour rappel). 5.1.6 Création de contenu h5p Tout éditeur Wordpress (les ensignants) peuvent créer du contenu nouveau h5p à partir du tableau de bord de Wordpress, et éditer les widgets existants. L’édition de manière quasi-wysiwyg avec les mêmes éditeurs que ceux disponibles sur https://h5p.org. C’est donc très facile. Il faudrait juste se discipliner à faire des backups via les fichiers .h5p sur p-Cloud dans sdd_h5p_backup par sécurité. TODO: il serait utile de pouvoir sortir une table de correspondance entre l’ID du widget h5p et un nom plus explicite. En effet, seul l’ID apparait dans l’événement xAPI. 5.1.7 Gestion des événements xAPI Ces événements sont accessibles à partir du tableau de bord de Wordpress dans la section H5PxAPIkatchu. Événements xAPI dans H5PxAPIkatchu. En bas tu tableau, on peut filtrer les données, et le bouton Download permet de récupérer le tableau filtré au format CSV. Le lien Delete permet de tout effacer et n’est disponible que pour un administrateur du site. Cette interface est basique, mais elle n’est pas prévue pour se substituer à des outils plus évolués. TODO: nous devons voir comment récupérer ces évémnements facilement et les injecter dans notre base de données MongoDB, à côté des événements learnr et Shiny. Pour rappel, la base de données MySQL n’est pas accessible depuis l’extérieur pour des raisons de sécurité et l’accès SSH doit être réactivé manuellement pour une courte durée. 5.1.8 Variables contextuelles Pour le bon fonctionnement de nos outils et l’enregistrement de l’activité des étudiants, nous avons besoin de définir un certain nombre de variables reprises dans le tableau ci-dessous. Toutes ces variables sont obtenues directement à la source1. La colonne origine indique d’où nous obtenons ces informations (pour Moodle, il faut que l’étudiant ait lancé https://wp.sciviews.org depuis son compte Moodle et à partir de la page de cours correspondante). Variable Contenu Origine login Le login Github de l’étudiant WP via Github [sv slug='sc-username'] email Le mail primaire Github de l’étudiant WP via Github [sv slug='sc-user-email'] displayname Nom utilisateur Wordpress(/Github) WP [sv slug='sc-display-name'] firstname Prénom comme indiqué dans Wordpress WP via Github [sv slug='sc-first-name'] lastname Nom de famille comme indiqué dans Wordpress WP via Github [sv slug='sc-last-name'] iemail Le mail UMONS (institutionnel) de l’étudiant Moddle iemail= Adresse de courriel iid Numéro de matricule de l’étudiant Moodle register = Nom d’utilisateur ifirstname Prénom comme indiqué dans Moodle Moodle ifirstname = Prénom ilastname Nom de famille comme indiqué dans Moodle Moodle ilastname = Nom institution Institution (ici UMONS) Moodle institution = Institution icourse Nom abbrégé du cours (ex.: S-BIOG-006) Moodle icourse = N° d’identification du cours iurl URL du serveur institutionnel (Moodle) Moodle iurl = URL du serveur iref Identifiant unique dans Moodle Moodle iref = Numéro d’identification A noter que nous croisons différentes sources (Moodle, Github, Wordpress), et les infos peuvent différer entre ces sources. Considérant un étudiant qui a “installé” ses outils correctement, à savoir : Son compte est créé au préalable dans Wordpress à partir du tableau des utilisateurs du cours issu de Moodle2, Il a créé un compte Github, Il a au moins une fois lancé la page https://wp.sciviews.org depuis le lien Moodle Bookdown dans le bon cours, Il s’est connecté dans Wordpress à partir du bouton de login via Github/BioDataScience. Faut-il forcer le login de l’étudiant dans Wordpress ? Autrement dit, il n’aurait accès aux cours que s’il est connecté. Il existe des plugins Wordpress qui permettent de faire cela, et aussi d’exclure les pages qui peuvent être vues par tous. Un de ces plugins est Force login. Toutes les informations de son compte lui sont accessibles dans Wordpress, et il peut librement les modifier dans le tableau de bord. Donc, cela signifie que l’information cruciale pour identifier un étudiant est iemail, son adresse email de l’UMONS fournie par Moodle. Toutefois, nous devons recouper avec son login Github pour obtenir les données issues de Github pour le même étudiant. Nous avons éventuellement besoin aussi de email, son email Github primaire (mais vérifier si celui-ci est enregistré dans Wordpress si l’étudiant est pré-enregistré via le tableau Moodle ! A moins que l’enregistrement ne puisse se faire que si les deux emails sont identiques ?) Si nous continuons à utiliser Discord, ce serait bien d’avoir le login Discord de l’étudiant aussi. Mais ici, il a le droit d’y poser des questions de manière anonymisée (c’est notre souhait). Néanmoins, il serait utile d’avoir un champ où nous pouvons éventuellement rentrer cette info à la main si souhaité. Une autre colonne comment serait aussi utile. Nous pourrions y indiquer par exemple si un étudiant a des difficultés particulières, ou la date de son arrivée pour les étudiants étrangers en passerelle, par exemple. En 2018-2019 et 2019-2020, nous utilisions le login Github et l’adresse email UMONS pour identifier les événements learnr, mais comme les étudiants devaient rentrer ces infos manuellement, nous avons eu beaucoup de soucis avec des encodages erronés… Donc maintenant, nous récupérons ces infos de manière automatique à la source autant que possible.↩ Il serait possible de proposer l’enregistrement libre, mais il faut acheter la version pro du plugin correspondant… et de plus, tout le monde ayant un compte Github pourrait alors s’enregistrer ! C’est pas ce qu’on souhaite.↩ "],
["shiny.html", "Chapitre 6 Shiny", " Chapitre 6 Shiny … "],
["moodle.html", "Chapitre 7 Moodle", " Chapitre 7 Moodle … "],
["gestion-des-cours.html", "7.1 Gestion des cours", " 7.1 Gestion des cours Un espace différent a été créé pour chaque AA (donc, deux pour SDD I et SDD II) par l’administrateur Moodle. Voici la liste des AA, l’intitutlé et le code Moodle correspondant (qui ne correspond pas au code dans le programme des cours) : Cours Code Moodle Intitulé SDD I Q1 S-BIOG-006 Science des données I : visualisation SDD I Q2 S-BIOG-027 Science des données I : inférence SDD II Q1 S-BIOG-015 Science des données II : modélisation SDD II Q2 S-BIOG-061 Science des données II : analyse SDD III Q1 S-BIOG-025 Science des données III : exploration et prédiction SDD IV all S-BIOG-043 Science des données IV : pratique SDD V Q1 S-BIOG-077 Science des données V : recherche reproductible SDD I Charleroi Q1 S-BIOG-921 Bio-informatique et science des données SDD II Charleroi Q2 ?????????? Bio-informatique et science des données II "],
["badges.html", "7.2 Badges", " 7.2 Badges Les badges sont très utiles car ils matérialisent la progression des étudiants. C’est à la fois une façon ludique d’apprendre, et un moyen efficace de pousser un étudiant à travailler. Les badges sont générés dans Moodle, mais bien sûr, ils sont liés à des …. activités Moodle. Avec nos applications externes, nous ne pouvons fournir des badges que manuellement, ce qui devient très vite laborieux. TODO: trouver un moyen d’automatiser l’octroi de badges. Moodle peut se connecter à https://badgr.io, et nous pouvons peut-être travailler via son interface ? A creuser ! Pour créer des badges, nous pouvons utiliser une application en ligne. Il suffit d’indiquer son adresse email, et de concevoir son badge. La même interface peut d’ailleurs être utilisée pour concevoir visuellement des hex-stickers (à faible résolution toutefois puisque c’est des pichiers .png de 200x200 pixels). Voici un exemple de badge que nous pourrions utiliser dans nos cours : Exemple de badge Les images correspondant à nos différents badges sont sur p-Cloud, dans le sous-dossier sdd_badges. "],
["notes.html", "7.3 Notes", " 7.3 Notes TODO: il est possible d’envoyer les notes à Moodle via une URL qui renvoie un fichier XML… Explorer cette piste pour créer et mettre à jour les notes Moodle depuis nos applis… "],
["h5p.html", "Chapitre 8 H5P", " Chapitre 8 H5P H5P permet de “créer, partager et réutiliser du contenu interactif HTML5 dans un browser Web”, d’après la page d’introduction du site Web. Il s’agit d’un ensemble de contenus HTLML5 (html + css + javascript) permettant d’afficher et d’interagir avec des exercices et des présentations sous plusieurs formes. Plus de 40 contenus différents sont disponibles. H5P est distribué sous forme de logiciel libre (gratuit et Open Source) qu’il est possible d’installer sur son propre serveur. De plus, h5p.org propose l’hébergement de contenus gratuits à des fins de test uniquement, et offre en complément une formule payante sur h5p.com, mais le tarif n’est pas renseigné. Dans cette section, nous reprendrons les choix stratégiques, l’installation, la configuration et le déploiement de H5P dans le cadre de nos cours de science des données à l’UMONS, ainsi que les principaux contenus H5P qui sont disponibles. "],
["installation-de-h5p.html", "8.1 Installation de H5P", " 8.1 Installation de H5P H5P ne peut fonctionner seul. Il doit être inclu dans un serveur plus large, soit un LMS (Learning Management System ou plateforme d’apprentissage en ligne comme), soit un CMS (Content Management System, système de gestion de contenu). L’un des LMS les plus populaires est Moodle qui a été choisi à l’UMONS comme outil institutionnel d’apprentissage en ligne à l’UMONS. H5P est compatible avec Moodle (il peut être installé comme plugin). Ce serait donc parfaitement logique de l’utiliser de cette manière. Un test avait été fait en 2019. si cela fonctionne, nous avons pu constater que le contenu H5P n’est pas utilisable ailleurs que dans Moodle lui-même, en tous cas de la façon dont le serveur test était configuré, avec les sécurités nécessaires pour protéger le site. Or, notre souhait est d’intéger le contenu H5P dans un bookdown qui ne peut être hébergé sur Moodle3. L’essai qui a été réalisé à l’UMONS en 2019 n’a pas été concrétisé dans le serveur Moodle en production. Or, il nous fallait intégrer du H5P dans nos bookdown, et ce, dès 2020-2021. Donc, nous avons recherché une autre option. Cette autre option consiste à utiliser soit Wordpress, soit Drupal pour lesquels H5P est également compatible. Après comparaison des possibilités des deux, nous avons opté pour Wordpress. H5P permet de récupérer des informations concernant l’activité des étudiants dans les exercices sous forme de requêtes xAPI. xAPI est un standard développé pour permettre l’interaction entre un LMS comme Moodle qui produit des événements xAPI, et un LRS (Learning Record Store) une base de données chargée d’enregistrer les traces de l’apprentissage au format standardisé xAPI. En complément de H5P lui-même et de Wordpress comme serveur principal, il nous faut donc un LRS et un plugin qui fait le pont entre H5P et ce LRS. Enfin, l’information n’est utile que si elle est identifiable comme provenant d’un étudiant en particulier. Le serveur doit donc gérer l’authentification des utilisateurs et transmettre l’identité de l’étudiant au travers de la requête xAPI. Si tout cela parait très compliqué, voici un petit schéma qui résume l’ensemble (à noter que nous avons choisi l’authentification via Github parce que nos étudiants ont également d’autres activités sur Github/Github Classroom, et il est dès lors plus facile de gérer une identité commune à toutes ces activités, même si l’identité UMONS est, hors contexte, la plus logique ici) : H5P et bookdown sont intégrés dans le même serveur Wordpress, ce qui permet l’affichage en iframe sans contraintes. Les informations de l’utilisateur proviennent d’une authentification Github, plus des données issues de Moodle via URL ou LTI. L’activité des étudiants H5P peut ainsi être enregistrée dans le LRS de notre choix via le protocole standard xAPI avec une identification correcte eet unique. 8.1.1 Installation du plugin H5P Une fois le serveur Wordpress opérationnel, l’installation de H5P lui-même est vraiment très simple. Connection au serveur Wordpress en temps qu’administrateur, Aller dans le tableau de bord -&gt; Extensions -&gt; Ajouter. Dans le champ de recherche, introduire “H5P”, Sélectionner “Interactive content - H5P”. Cliquer “Installer”, puis “Activer”. C’est fait ! H5P est installé, mais aucune formez de contenu n’est encore disponible. H5P conseille d’installer des librairies de contenu. A partir du tableau de bord, cela se fait via “H5P Content -&gt; Libraries”. Cepednant, cela ne m’apparait pas nécessaire car lorsqu’on importe du contenu H5P dans le site, les librairies nécessaires sont automatiquement disponibles… plus d’explications ci-dessous. 8.1.2 Configuration de H5P Le panneau de configuration est accessible pour l’administrateur Wordpress depuis le tableau de bord -&gt; Réglages -&gt; H5P. Voici une copie d’écran de la configuration choisie. La barre d’outils H5P en dessous du contenu est désactivée par défaut (“Controlled by author” non coché). Cette barre d’outils permet le partage et la réutilisation de contenu. Nous la garderions bien activées, mais le bouton de réemploi doit apparemment être activé pour que l’inclusion dans un bookdown soit possible. Or, si ce bouton est activé, tout le monde peut inclure le contenu dans d’autres sites… et impacter notre quotas d’utilisation de requêtes. Nous ne le souhaitons bien évidemment pas. Pour récupérer un contenu sous forme de fichier .h5p, il faut réactiver cette option temporairement dans le tableau de bord, et seul l’administrateur du site peut le faire (voir backup H5P plus loin). Les résutats utilisateurs (“Log results…” est coché) permet d’avoir des statistiques de base utilisateur par utilisateur sur les H5P. C’est utile, mais il faudra voir à terme l’impact sur l’espace disque utilisé pour cette fonction. La sauvegarde du contenu (“Allow logged-in users to resume tasks”) est activée et utile puisqu’elle permet la mémorisation d’une session à l’autre des sélections dans les contenus H5P pour les utilisateurs enregistrés. “Show toggle switch for others’ H5P contents” n’est pas très clair pour moi. Je l’ai laissé pour l’instant sur “Yes, show all contents by default”. Est-ce qu’il s’agit de voir le contenu crée par d’autres utilisateurs ? Si, oui, c’est ce qu’on veut (les étudiant utilisent le contenu créé par les profs). “Add content method” est réglé sur id. L’option suivante, “Enable LRS dependent content types” est importante et doit être coché pour pouvoir enregistrer l’activité via xAPI (voir plus loin). Les deux dernières options sont en relation avec la gestion et le développement H5P. Nous les laissons cochées (“Use H5P Hub” et “Automatically contribute usage statistics”). 8.1.3 Enregistrement H5P xAPI Une fois le plugin H5P installé, il nous faut encore permettre l’enregistrement des activités des étudiants. Nous l’avons déjà vu, cette possibilité est prévue dans H5P et le protocole standardisé xAPI est utilisé, ce qui le rend compatible avec les LRS du marché. Dans Wordpress, nous avons deux options : Un enregistrement local dans la base de données MySQL de Wordpress directement sur le serveur avec H5PxAPIkatchu, Un enregistrement dans un LRS via xAPI avec wp-h5p-xapi. Nous allons aborder et discuter ces deux options tour-à-tour. 8.1.3.1 H5PxAPIkatchu Ce plugin est facile à installé puisqu’il est disponible depuis Wordpress. La procédure est la même que pour l’installation de H5P lui-même (l’administrateur va dans la partie installation d’extension du tableau de bord, rentre “H5PxAPI” dans la boite de recherche, sélectionne l’item et clqiue “Installer” puis “Activer”). Ce plugin est gratuit et il semble bien maintenu. La configuration est également extrêmement simple. Configuration de H5PxAPIkatchu. Comme nous souhaitons récolter un maximul d’information sur l’activité des étudiants, et voulons récupérer le contenu xAPI intact, nous cochons “Store complete statements” et “Capture everything”. L’option “Debug” n’est pas nécessaire et peut rester décochée. Une fois cette configuration effectuée, l’activité H5P est enregistrée directement dans la base de données MySQL de Wordpress. Cette base de données n’est pas disponible de l’extérieur dans notre configuration. Par contre, H5PxAPIkatchu permet de visualiser un tableau avec les données, de le filtrer, et de récupérer le résultat sous forme de fichier CSV avec le bouton “Download” (le lien “Delete” permet d’effacer le contenu et n’est disponible que pour l’administrateur du site). Contenu xAPI enregistré par H5PxAPIkatchu. L’utilisateur est correctement identifié dans le tableau enregistré. Et c’est tout ! Pas besoin de LRS, pas besoin de configuration à rallonge… par contre, cela ne convient que pour du dépannage. En effet, l’accès aux données n’est pas possible pour, par exemple, générer les rapports de progression des étudiants. L’extraction sous forme CSV doit se faire manuellement ! Après l’enthousiasme suite à un premier essai d’enregistrement de l’activité réussie lorsque le contenu H5P est utilisé directement dans Wordpress (à partir d’une page Wordpress ou du tableau de bord), nous faisons face à une déception quand nous constatons que cela ne fonctionne pas dans le bookdown ! Pourtant, nous avons bien installé notre bookdown dans le même serveur que Wordpress/H5P pour permettre une communication fluide… alors, pourquoi ça ne fonctionne toujours pas ? En fait, nous devons nous plonger dans les détails de l’implémentation pour comprendre que ce n’est pas H5P lui-même qui effectue l’enregistrement, mais la page dans laquelle le contenu est inclu. Autrement dit, notre brave bookdown en pages statique va se voir délégué le travail. Le schéma suivant explique le détail de l’implémentation. Pour des raisons de sécurité, l’enregistrement de l’événement xAPI se fait “server-side” par du code PHP dans H5PxAPIkatchu. Par contre, H5P ne communique jamais lui-même avec le LRS, mais délègue cette tâche à la page parent qui l’héberge (ce qui ne fonctionne que si les deux sont issus du même domaine). Donc, notre bookdown va devoir effectuer le transfert de l’événement xAPI via une requête AJAX sur le serveur (partie en rouge) qui manque actuellement. Moralité, pour que notre bookdown enregistre les événements H5P, il faut lui adjoindre le code en Javascript nécessaire pour faire le transfert. Ce code est repris et adapté de H5P lui-même, ainsi que de H5PxAPIkatchu. Ce code est inclus dans le fichier header.html qui est inclu dans le bookdown grâce à ceci dans index.Rmd : output: bookdown::gitbook: includes: in_header: header.html Tout d’abord, la partie H5P qui fait l’essentiel du travail. La partie H5PIntegration est normalement générée à partir de Wordpress, mais comme nous utilisons des pages statiques dans bookdown, nous le copions tel quel ici. Voic ce que cela donne : &lt;!-- Required for H5P xAPI feedback --&gt; &lt;script&gt;H5PIntegration = {&quot;baseUrl&quot;:&quot;https:\\/\\/wp.sciviews.org&quot;,&quot;url&quot;:&quot;\\/wp-content\\/uploads\\/h5p&quot;,&quot;postUserStatistics&quot;:false,&quot;ajax&quot;:{&quot;setFinished&quot;:&quot;https:\\/\\/wp.sciviews.org\\/wp-admin\\/admin-ajax.php?token=e6b10366a6&amp;action=h5p_setFinished&quot;,&quot;contentUserData&quot;:&quot;https:\\/\\/wp.sciviews.org\\/wp-admin\\/admin-ajax.php?token=ea1774d67b&amp;action=h5p_contents_user_data&amp;content_id=:contentId&amp;data_type=:dataType&amp;sub_content_id=:subContentId&quot;},&quot;saveFreq&quot;:&quot;30&quot;,&quot;siteUrl&quot;:&quot;https:\\/\\/wp.sciviews.org&quot;,&quot;l10n&quot;:{&quot;H5P&quot;:{&quot;fullscreen&quot;:&quot;Fullscreen&quot;,&quot;disableFullscreen&quot;:&quot;Disable fullscreen&quot;,&quot;download&quot;:&quot;Download&quot;,&quot;copyrights&quot;:&quot;Rights of use&quot;,&quot;embed&quot;:&quot;Embed&quot;,&quot;size&quot;:&quot;Size&quot;,&quot;showAdvanced&quot;:&quot;Show advanced&quot;,&quot;hideAdvanced&quot;:&quot;Hide advanced&quot;,&quot;advancedHelp&quot;:&quot;Include this script on your website if you want dynamic sizing of the embedded content:&quot;,&quot;copyrightInformation&quot;:&quot;Rights of use&quot;,&quot;close&quot;:&quot;Close&quot;,&quot;title&quot;:&quot;Title&quot;,&quot;author&quot;:&quot;Author&quot;,&quot;year&quot;:&quot;Year&quot;,&quot;source&quot;:&quot;Source&quot;,&quot;license&quot;:&quot;License&quot;,&quot;thumbnail&quot;:&quot;Thumbnail&quot;,&quot;noCopyrights&quot;:&quot;No copyright information available for this content.&quot;,&quot;reuse&quot;:&quot;Reuse&quot;,&quot;reuseContent&quot;:&quot;Reuse Content&quot;,&quot;reuseDescription&quot;:&quot;Reuse this content.&quot;,&quot;downloadDescription&quot;:&quot;Download this content as a H5P file.&quot;,&quot;copyrightsDescription&quot;:&quot;View copyright information for this content.&quot;,&quot;embedDescription&quot;:&quot;View the embed code for this content.&quot;,&quot;h5pDescription&quot;:&quot;Visit H5P.org to check out more cool content.&quot;,&quot;contentChanged&quot;:&quot;This content has changed since you last used it.&quot;,&quot;startingOver&quot;:&quot;You&#39;ll be starting over.&quot;,&quot;by&quot;:&quot;by&quot;,&quot;showMore&quot;:&quot;Show more&quot;,&quot;showLess&quot;:&quot;Show less&quot;,&quot;subLevel&quot;:&quot;Sublevel&quot;,&quot;confirmDialogHeader&quot;:&quot;Confirm action&quot;,&quot;confirmDialogBody&quot;:&quot;Please confirm that you wish to proceed. This action is not reversible.&quot;,&quot;cancelLabel&quot;:&quot;Cancel&quot;,&quot;confirmLabel&quot;:&quot;Confirm&quot;,&quot;licenseU&quot;:&quot;Undisclosed&quot;,&quot;licenseCCBY&quot;:&quot;Attribution&quot;,&quot;licenseCCBYSA&quot;:&quot;Attribution-ShareAlike&quot;,&quot;licenseCCBYND&quot;:&quot;Attribution-NoDerivs&quot;,&quot;licenseCCBYNC&quot;:&quot;Attribution-NonCommercial&quot;,&quot;licenseCCBYNCSA&quot;:&quot;Attribution-NonCommercial-ShareAlike&quot;,&quot;licenseCCBYNCND&quot;:&quot;Attribution-NonCommercial-NoDerivs&quot;,&quot;licenseCC40&quot;:&quot;4.0 International&quot;,&quot;licenseCC30&quot;:&quot;3.0 Unported&quot;,&quot;licenseCC25&quot;:&quot;2.5 Generic&quot;,&quot;licenseCC20&quot;:&quot;2.0 Generic&quot;,&quot;licenseCC10&quot;:&quot;1.0 Generic&quot;,&quot;licenseGPL&quot;:&quot;General Public License&quot;,&quot;licenseV3&quot;:&quot;Version 3&quot;,&quot;licenseV2&quot;:&quot;Version 2&quot;,&quot;licenseV1&quot;:&quot;Version 1&quot;,&quot;licensePD&quot;:&quot;Public Domain&quot;,&quot;licenseCC010&quot;:&quot;CC0 1.0 Universal (CC0 1.0) Public Domain Dedication&quot;,&quot;licensePDM&quot;:&quot;Public Domain Mark&quot;,&quot;licenseC&quot;:&quot;Copyright&quot;,&quot;contentType&quot;:&quot;Content Type&quot;,&quot;licenseExtras&quot;:&quot;License Extras&quot;,&quot;changes&quot;:&quot;Changelog&quot;,&quot;contentCopied&quot;:&quot;Content is copied to the clipboard&quot;,&quot;connectionLost&quot;:&quot;Connection lost. Results will be stored and sent when you regain connection.&quot;,&quot;connectionReestablished&quot;:&quot;Connection reestablished.&quot;,&quot;resubmitScores&quot;:&quot;Attempting to submit stored results.&quot;,&quot;offlineDialogHeader&quot;:&quot;Your connection to the server was lost&quot;,&quot;offlineDialogBody&quot;:&quot;We were unable to send information about your completion of this task. Please check your internet connection.&quot;,&quot;offlineDialogRetryMessage&quot;:&quot;Retrying in :num....&quot;,&quot;offlineDialogRetryButtonLabel&quot;:&quot;Retry now&quot;,&quot;offlineSuccessfulSubmit&quot;:&quot;Successfully submitted results.&quot;}},&quot;hubIsEnabled&quot;:true,&quot;reportingIsEnabled&quot;:true,&quot;libraryConfig&quot;:null,&quot;crossorigin&quot;:null,&quot;crossoriginCacheBuster&quot;:null,&quot;pluginCacheBuster&quot;:&quot;?v=1.15.0&quot;,&quot;libraryUrl&quot;:&quot;https:\\/\\/wp.sciviews.org\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js&quot;,&quot;core&quot;:{&quot;styles&quot;:[&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/styles\\/h5p.css?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/styles\\/h5p-confirmation-dialog.css?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/styles\\/h5p-core-button.css?ver=1.15.0&quot;],&quot;scripts&quot;:[&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/jquery.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-event-dispatcher.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-x-api-event.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-x-api.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-content-type.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-confirmation-dialog.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-action-bar.js?ver=1.15.0&quot;,&quot;\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/request-queue.js?ver=1.15.0&quot;]},&quot;loadedJs&quot;:[],&quot;loadedCss&quot;:[],&quot;contents&quot;:{&quot;cid-7&quot;:{&quot;library&quot;:&quot;H5P.MultiChoice 1.14&quot;,&quot;jsonContent&quot;:&quot;{\\&quot;answers\\&quot;:[{\\&quot;correct\\&quot;:false,\\&quot;tipsAndFeedback\\&quot;:{\\&quot;tip\\&quot;:\\&quot;\\&quot;,\\&quot;chosenFeedback\\&quot;:\\&quot;\\&quot;,\\&quot;notChosenFeedback\\&quot;:\\&quot;\\&quot;},\\&quot;text\\&quot;:\\&quot;&lt;div&gt;The header of the document&lt;\\\\\\/div&gt;\\\\n\\&quot;},{\\&quot;correct\\&quot;:true,\\&quot;tipsAndFeedback\\&quot;:{\\&quot;tip\\&quot;:\\&quot;\\&quot;,\\&quot;chosenFeedback\\&quot;:\\&quot;&lt;div&gt;Excellent! A chunk is indeed a special area delimited by \\\\u0010\\\\u0010```{R} and ``` tags that contains R code to be evaluated in place when the document is compiled.&lt;\\\\\\/div&gt;\\\\n\\&quot;,\\&quot;notChosenFeedback\\&quot;:\\&quot;&lt;div&gt;Oww! You should go back to the capsule about R Markdown to learn what a chunk is.&lt;\\\\\\/div&gt;\\\\n\\&quot;},\\&quot;text\\&quot;:\\&quot;&lt;div&gt;An area that contains R code&lt;\\\\\\/div&gt;\\\\n\\&quot;},{\\&quot;correct\\&quot;:false,\\&quot;tipsAndFeedback\\&quot;:{\\&quot;tip\\&quot;:\\&quot;\\&quot;,\\&quot;chosenFeedback\\&quot;:\\&quot;\\&quot;,\\&quot;notChosenFeedback\\&quot;:\\&quot;\\&quot;},\\&quot;text\\&quot;:\\&quot;&lt;div&gt;A area that contains markdown text&lt;\\\\\\/div&gt;\\\\n\\&quot;}],\\&quot;overallFeedback\\&quot;:[{\\&quot;from\\&quot;:0,\\&quot;to\\&quot;:100}],\\&quot;UI\\&quot;:{\\&quot;checkAnswerButton\\&quot;:\\&quot;Check\\&quot;,\\&quot;showSolutionButton\\&quot;:\\&quot;Show solution\\&quot;,\\&quot;tryAgainButton\\&quot;:\\&quot;Retry\\&quot;,\\&quot;tipsLabel\\&quot;:\\&quot;Show tip\\&quot;,\\&quot;scoreBarLabel\\&quot;:\\&quot;You got :num out of :total points\\&quot;,\\&quot;tipAvailable\\&quot;:\\&quot;Tip available\\&quot;,\\&quot;feedbackAvailable\\&quot;:\\&quot;Feedback available\\&quot;,\\&quot;readFeedback\\&quot;:\\&quot;Read feedback\\&quot;,\\&quot;wrongAnswer\\&quot;:\\&quot;Wrong answer\\&quot;,\\&quot;correctAnswer\\&quot;:\\&quot;Correct answer\\&quot;,\\&quot;shouldCheck\\&quot;:\\&quot;Should have been checked\\&quot;,\\&quot;shouldNotCheck\\&quot;:\\&quot;Should not have been checked\\&quot;,\\&quot;noInput\\&quot;:\\&quot;Please answer before viewing the solution\\&quot;},\\&quot;behaviour\\&quot;:{\\&quot;enableRetry\\&quot;:true,\\&quot;enableSolutionsButton\\&quot;:true,\\&quot;enableCheckButton\\&quot;:true,\\&quot;type\\&quot;:\\&quot;auto\\&quot;,\\&quot;singlePoint\\&quot;:true,\\&quot;randomAnswers\\&quot;:true,\\&quot;showSolutionsRequiresInput\\&quot;:true,\\&quot;confirmCheckDialog\\&quot;:false,\\&quot;confirmRetryDialog\\&quot;:false,\\&quot;autoCheck\\&quot;:false,\\&quot;passPercentage\\&quot;:100,\\&quot;showScorePoints\\&quot;:true},\\&quot;confirmCheck\\&quot;:{\\&quot;header\\&quot;:\\&quot;Finish ?\\&quot;,\\&quot;body\\&quot;:\\&quot;Are you sure you wish to finish ?\\&quot;,\\&quot;cancelLabel\\&quot;:\\&quot;Cancel\\&quot;,\\&quot;confirmLabel\\&quot;:\\&quot;Finish\\&quot;},\\&quot;confirmRetry\\&quot;:{\\&quot;header\\&quot;:\\&quot;Retry ?\\&quot;,\\&quot;body\\&quot;:\\&quot;Are you sure you wish to retry ?\\&quot;,\\&quot;cancelLabel\\&quot;:\\&quot;Cancel\\&quot;,\\&quot;confirmLabel\\&quot;:\\&quot;Confirm\\&quot;},\\&quot;question\\&quot;:\\&quot;&lt;p&gt;What is a chunk in R Markdown?&lt;\\\\\\/p&gt;\\\\n\\&quot;,\\&quot;media\\&quot;:{\\&quot;disableImageZooming\\&quot;:false}}&quot;,&quot;fullScreen&quot;:&quot;0&quot;,&quot;exportUrl&quot;:&quot;\\/wp-content\\/uploads\\/h5p\\/exports\\/multiple-choice-7.h5p&quot;,&quot;embedCode&quot;:&quot;&lt;iframe src=\\&quot;https:\\/\\/wp.sciviews.org\\/wp-admin\\/admin-ajax.php?action=h5p_embed&amp;id=7\\&quot; width=\\&quot;:w\\&quot; height=\\&quot;:h\\&quot; frameborder=\\&quot;0\\&quot; allowfullscreen=\\&quot;allowfullscreen\\&quot;&gt;&lt;\\/iframe&gt;&quot;,&quot;resizeCode&quot;:&quot;&lt;script src=\\&quot;https:\\/\\/wp.sciviews.org\\/wp-content\\/plugins\\/h5p\\/h5p-php-library\\/js\\/h5p-resizer.js\\&quot; charset=\\&quot;UTF-8\\&quot;&gt;&lt;\\/script&gt;&quot;,&quot;url&quot;:&quot;https:\\/\\/wp.sciviews.org\\/wp-admin\\/admin-ajax.php?action=h5p_embed&amp;id=7&quot;,&quot;title&quot;:&quot;multiple-choice&quot;,&quot;displayOptions&quot;:{&quot;frame&quot;:false,&quot;export&quot;:false,&quot;embed&quot;:true,&quot;copyright&quot;:false,&quot;icon&quot;:false,&quot;copy&quot;:false},&quot;metadata&quot;:{&quot;title&quot;:&quot;multiple-choice&quot;,&quot;license&quot;:&quot;U&quot;},&quot;contentUserData&quot;:[{&quot;state&quot;:&quot;{}&quot;}],&quot;scripts&quot;:[&quot;\\/wp-content\\/uploads\\/h5p\\/cachedassets\\/bbb484ab91a596c1d881578ee3d99ab92df05f05.js&quot;,&quot;https:\\/\\/wp.sciviews.org\\/wp-content\\/plugins\\/h5pxapikatchu\\/js\\/h5pxapikatchu-listener.js?ver=0.4.2&quot;],&quot;styles&quot;:[&quot;\\/wp-content\\/uploads\\/h5p\\/cachedassets\\/bbb484ab91a596c1d881578ee3d99ab92df05f05.css&quot;]}}};&lt;/script&gt;&lt;link rel=&#39;stylesheet&#39; id=&#39;h5p-core-styles-h5p-css&#39; href=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/styles/h5p.css&#39; media=&#39;all&#39; /&gt; &lt;link rel=&#39;stylesheet&#39; id=&#39;h5p-core-styles-h5p-confirmation-dialog-css&#39; href=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/styles/h5p-confirmation-dialog.css&#39; media=&#39;all&#39; /&gt; &lt;link rel=&#39;stylesheet&#39; id=&#39;h5p-core-styles-h5p-core-button-css&#39; href=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/styles/h5p-core-button.css&#39; media=&#39;all&#39; /&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-includes/js/wp-embed.min.js&#39;&gt;&lt;/script&gt; Et c’est pas tout ! Il nous faut encore ceci : &lt;script&gt; var wpAJAXurl = &quot;https:\\/\\/wp.sciviews.org\\/wp-admin\\/admin-ajax.php&quot;; var debugEnabled = &quot;0&quot;; var captureAllH5pContentTypes = &quot;1&quot;; var h5pContentTypes = [&quot;&quot;]; &lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5pxapikatchu/js/h5pxapikatchu-variables.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/jquery.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-event-dispatcher.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-x-api-event.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-x-api.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-content-type.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-confirmation-dialog.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/h5p-action-bar.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://wp.sciviews.org/wp-content/plugins/h5p/h5p-php-library/js/request-queue.js&#39;&gt;&lt;/script&gt; Voilà, avec tout cela, nous recompilons le bookdown, plaçons tout le contenu de \\docs sur le serveur… et (après bien des essais et erreurs tout de même)… ça marche ! En dépis de sa simplicité, H5PxAPIkatchu ne convient pas pour l’objectif que nous poursuivons. Nous avons imaginé étendre le plugin pour enregistrer les données dans notre base de données MongoDB Atlas, mais cela nécessite du développement PHP et l’utilisation d’une librairie PHP mongodb qu’il faut installer sur le serveur. Au final, une solution passant par un véritable LRS est bien meilleure à long terme, surtout si nous voulons proposer notre implémentation au niveau institutionnel un jour ! Nous gardons toutefois la solution avec H5PxAPIkatchu à disposition en cas d’urgence si le LRS ne fonctionnait pas. 8.1.3.2 wp-h5p-xapi et LRS Dans cette configuration, il nous faut un LRS. La plupart des solutions proposées sont commerciales, payantes et … chères, sauf une : Watershed. Son utilisation comme LRS est gratuite et sans limitations ni du nombre d’utilisateurs, ni du nombre d’événements générés par mois. Ça semble presque incroyable, sauf si on comprend que c’est pour eux un produit d’appel vers leurs outils analytics qui effectuent des rapports sur le LRS, et qui sont eux, bien chers (minimum 1600$/mois) ! Mais nous, du moment qu’on puisse enregister nos événements xAPI et les récupérer dans R, on a tout ce qu’il nous faut. Donc, la solution complète envisagée passe par wp-h5p-xapi et Watershed. TODO: continue this… Compte Watershed. Installation de wp_h5p-xapi à partir dunfork récent (https://github.com/ClassCloud/wp-h5p-xapi) =&gt; récupération au format .zip et installation par téléversement Installation, connexion à Watershed et test dans Wordpress Modification du script dans bookdown et test dans bookdown. D’un point de vue technique, le contenu H5P s’affiche dans un iframe. Or les possibilités des iframes inter-sites sont limitées par le protocole HTML5 sous-jacent lui-même pour éviter les abus. Il nous faut donc le bookdown (pages statiques) et le contenu H5P (devant être lié à un serveur LMS ou CMS) servis par le même site.↩ "],
["gestion-des-contenus-h5p.html", "8.2 Gestion des contenus H5P", " 8.2 Gestion des contenus H5P Chaque contenu H5P est indépendant du reste. Attention que les contenus complexes sont volumineux. Par exemple, les vidéos interactives occupent chacune 2,8Mo sur le serveur lorsque les vidéos sont sur youtube (donc, occupation de place minimale puisque la vidéo elle-même n’est pas sur le site Wordpress). Au départ, aucun contenu n’est réalisable car les librairies nécessaires ne sont pas encore installée. Mais il n’est pas nécessaire de les installer car il suffit de téléverser du contenu pour que leur installation se fasse automatiquement. Donc, la procédure pragmatique suivante est retenue pour enrichir le site des librairies dont nous avons besoin : Pour un type de contenu pas encore supporté, aller sur h5p.org. Se connecter (créer un compte gratuit, si nécessaire). Aller dans “Examples and Downloads” et choisir un exemple de type de contenu souhaité. Cliquer sur “Reuse”. Ou alors aller dans “Contents” -&gt; “Create New Content” et créer un contenu du type souhaité. Puis cliquer sur “Reuse” lorsqu’on est satisfait du contenu. Voici un exemple avec le contenu de type “True/False”. Dans son compte sur h5p.org aller dans “Contents” -&gt; “Create New Content”, et choisir le type de contenu que l’on veut créer (ici True/False question). Créer le contenu et l’enregister). Une fois le contenu terminé, il suffit de liquer sur “Reuse” (flèche rouge) et de cliquer sur “Download as an .h5p file” pour récupérer le fichier .h5p. Ensuite, dans le tableau de bord de Wordpress (pour un utilisateur éditeur), aller dans H5P Content -&gt; Add New. Sélectionner “Téléverser” et indiquer le fichier .h5p que l’on vient de sauver, puis “Utiliser”. Ajout du contenu H5P sur le site Worpress par té&quot;léversement du fichier .h5p. Une fois que c’est fait, non seulement le contenu est téléversé, mais les librairies requises sont également ajoutées. De cette façon, un autre contenu de ce type peut maintenant être créé directement depuis la tableau de bord de Wordpress, H5P content -&gt; Add New. 8.2.1 Backup H5P Le backup du site entier Wordpress est effectué. Par contre, il est utile d’avoir une copie de nos différents contenus H5P au format de fichier .h5p. Pour cela, un administrateur de site doit au préalable temporairement cocher l’option “Toolbar Below Content”, de sorte quel es boutons “Reuse” apparaissent. Pour chaque contenu que l’on souhaite sauvegarder, l’afficher, et cliquer sur son bouton “Reuse” pour récupérer le fichier .h5p. Ensuite, placer les fichiers .h5p sur p-Cloud dans le répertoire sdd_h5p_backup. "],
["quelques-contenus-h5p-utiles.html", "8.3 Quelques contenus H5P utiles", " 8.3 Quelques contenus H5P utiles H5P propose plus d’une quarantaine de types de contenus différents. Tous ne sont pas utiles dans le contexte des cours de science des données, mais certains le sont particulièrement. Voici une petite sélection. 8.3.1 Apprentissage du code R Apprendre à coder en R, comme tout apprentissage de langage, nécessite du temps et de la persévérance. L’approche pas à pas, ludique et diversifiée est, en la matière, importante. H5P nous aide notamment avec les contenus suivants : Advanced fill the blanks. Il est plus facile au début de se focaliser sur des parties du code lorsqu’un example est décortiqué. Cependant, l’approche purement passive (l’étudiant suit une explication sur le code) n’est pas très fructueuse. L’étudiant doit être actif et forcé à réfléchir, tout en l’amenant en douceur à écrire lui-même des (parties) de code. “Advanced fill the blanks” est parfait pour cela car il permet un feedback efficace pour aider l’étudiant dans son apprentissage. Ce genre de question pourrait également être envisagée dans une zone de code R d’un learnr, mais c’est plus lourd et à réserver à une phase ultérieure de l’apprentissage. S’il faut encore plus faciliter l’exercice, nous pourrions aussi suggérer des fragments de code à replacer au bon endroit, c’est ce que fait Drag the words. C’est en quelque sorte une version encore plus simplifiée de l’exercice de type “remplir les vides” puisque les solutions sont aussi suggérées sous forme de fragments de code à replacer au bon endroit. Pour varier, nous pourrions aussi proposer des bouts de code et poser ensuite une question simple sur ce code, à répondre par oui ou non, voir True/False question. Pour l’apprentissage de la syntaxe R (où sont les variables, les fonctions, les arguments, les chaines de caractères, etc. dans du code), nous pouvons utiliser Mark the words. 8.3.2 Apprentissage des graphiques La visualisation des données impose de développer deux compétences en parallèle : (1) la faculté de déterminer quelle est la meilleure représentation graphique pour quelles données, et (2) la capacité à maitriser techniquement l’outil pour effectivement réaliser le graphique voulu. En plus de cela, il faut aussi que le graphique soit correct (libellé ou unité des axes présents, respect des conventions, pas de surcharges inutiles, etc.) Pour montrer les différentes parties importantes d’un graphique ou, par exemple, expliquer les différents éléments d’une boite de dispersion, l’Image hotspots est idéal. C’est infiniment plus engageant qu’un graphique et une légende statiques. Le complément logique pour faire des exercices d’auto-évaluation sur le même thème, c’est le Find multiple hotspots. Le Drag and drop propose une alternative intéressante pour varier le type d’exercices consistant à identifier les parties importantes d’un graphique. Image juxtaposition permet de comparer deux solutions graphiques différentes d’une manière sympathique. Il est aussi possible de visualiser une variation sur un thème lié à un même graphique, par exemple, deux palettes de couleurs différentes, ou l’utilisation de la couleur versus des symboles. Nous pouvons aussi imaginer avec cet outil comparer un modèle linéaire et un modèle polynomial, par exemple. 8.3.3 Explications générales Ici, les Vidéos interactives sont un must. Les étudiants étant immergés dans l’audiovisuel constamment, l’image animée est un canal de communication familier et habituel. Nous devons l’exploiter. Par contre, il est trop facile de regarder passivement une vidéo… et d’avoir l’impression d’avoir compris sans pourtant n’avoir rien assimilé. Parsemer des questions sur ce qui vient d’être visualisé dans la vidéo est un moyen extrêmement puissant pour faire prendre conscience que la lecture est passive. L’étudiant peut alors revenir en arrière et visionner plus attentivement dans le but de pouvoir répondre à la question. Ce faisant, il apprend, comprend et assimile bien mieux le contenu de la vidéo ! Il ne faut pas négliger non plus le Course presentation. Si les explications deviennent longues et les pages de texte interminables, ce n’est pas très engageant pour l’étudiant. La matière sous forme d’une présentation où des questions d’auto-évaluation sont directement incluses est un moyen très efficace de diversifier, casser la monotonie d’une longue explication textuelle, et plus engageant si la présentation est richement illustrée. Pour un exemple concret, si nous expliquons comment réaliser un test t de Student et en même temps que nous donnons les détails de calcul, cela fait trop. De plus, de part notre expérience, l’étudiant a ensuite du mal à faire la part des choses entre l’application du test dans R et les détails plus techniques du “comment ça marche en interne”. Le texte devient aussi très (trop) long. Une solution est alors de se focaliser sur la résolution du test dans R uniquement sous forme de développement textuel, et réserver une présentation “comment le t test est calculé” pour les détails, et peut-être une autre présentation intitulée “les différents t tests” pour expliquer les différentes variantes. 8.3.4 Autoévaluation Les learnrs sont des outils de choix que nous appliquons avec succès pour l’autoévaluation des étudiants. Cependant, une autoévaluation plus rapide et plus proche du matériel pédagogique lui-même est encore plus efficace en première ligne (suivi en seconde ligne par des learnrs avec un niveau de difficulté supérieur), et enfin en troisième ligne, les exercices sur données réelles dans un projet RStudio sur Github Classroom. Nous venons de voir que H5P permet cette autoévaluation directement à l’intérieur des vidéos et des présentations. Il nous manque l’équivalent pour les développements textuels. Les contenus suivants fournissent ce dont nous avons besoin. Quizzs permet de rassembler plusieurs questions successives en un contenu unique avec une note finale pour l’ensemble du genre 4/6 questions répondues correctement. Pour chaque question du quizz, voire des questions isolées parsemées dans le texte directement, nous avons différents contenus possibles : vrai/faux, choix unique ou Multiple choice. Pour une variation plus ludique des questions d’auto-évaluation, nous pouvons envisager utiliser les Flashcards, surtout pour les graphiques. 8.3.5 “Take home message” Dans une capsule d’apprentissage certains éléments sont cruciaux. Bien définir les objectifs et les prérequis au début de la capsule sont vitaux. En fin de capsule, un résumé des points importants à retenir, le fameux “take home message” est ultra-important. H5P propose du contenu qui permet d’appréhender ce résumé de manière plus active. Summary se doit pratiquement d’être utilisé systématiquement en fin de chaque capsule d’apprentissage pour résumer les points importants. Avec ce contenu H5P, c’est l’étudiant qui établi sa liste de messages importants de manière active. "],
["videos.html", "Chapitre 9 Vidéos", " Chapitre 9 Vidéos … "],
["progression.html", "Chapitre 10 Rapport de progression", " Chapitre 10 Rapport de progression Un des gros problèmes des cours en classes inversées est d’arriver à stimuler les étudiants à faire le travail chez eux. Livrés à eux-mêmes, seulement un pourcentage trop faible d’entre eux va réaliser le travail demandé à domicile. Évidemment, c’est également préjudiciable au travail en classe, si ce dernier part du principe que la matière hors présentiel est censée être vue. Et si des travaux de groupe (conseillé) sont prévus, ceux qui n’ont rien fait apparaitront comme des boulets pour les autres. En parallèle au déploiement du matériel d’e-learning hors présentiel, nous devons mettre également en place des outils pour permettre à l’étudiant de suivre sa progression d’apprentissage, et aussi pour le stimuler dans cet auto-apprentissage. Les outils qui peuvent être mis en place sont : Pénalisation si le travail n’est pas fait. Il faut arriver à déterminer ici objectivement si le travail est fait ou pas. Le plus simple est d’interroger les étudiants en début de chaque classe en présentiel, mais cela prend du temps et n’est pas très constructif ! Cette approche n’est donc pas conseillée. La vidéo suivante explique d’ailleurs pourquoi le coercitif ne fonctionne pas bien et pourquoi il faut plutôt valoriser le travail effectué plutôt que de punir s’il n’est pas fait. Il faut aussi une récompense immédiate, et favoriser l’émulation individuelle (se dépasser soi-même), et de groupe (se comparer à la progression générale de la classe). Les aides et encouragement au travail que nous avons mis en place de manière utile sont : L’émulation personnelle au travers de point reçu si l’on fait tous les exercices, La valorisation d’un comportement ou d’un résultat positif au delà de la moyenne à l’aide de points bonus, Les travaux de groupes, les challenges (par exemple, les étudiants doivent reproduire un graphique difficile), les compétitions (une course contre le temps et/ou entre plusieurs groupes pour résoudre un problème) participent efficacement à dynamiser le travail en classe et à vairer les activités. L’utilisation des réseaux sociaux pour communiquer. Le forum de Moodle est peu ou pas utilisé du tout. Les issues de Github, une fois que les étudiants ont appris à les utiliser, s’avèrent utiles car elles sont disponibles près du dépôt lui-même qui contient les exercices. Mais ce qui fonctionne le mieux (testé en période de confinement Covid-19), c’est Discord parce que beaucoup d’étudiants connaissent et utilisent déjà pour les jeux. Les étudiants sollicitant une aide plus directe apprécie de pouvoir poser ses questions par email. Afin de pouvoir être plus réactif, nous avons mis en place une adress sdd@sciviews.org pour laquelle tous les enseignants du cours ont accès. Pour le retour direct, nous mettons progressivement en place le rapport de progression. Les actions de l’étudiant dans les learnrs (et dans un second temps également h5p et les apps shiny) sont enrgistrés. Le rapport de progression est une app shiny qui collecte, nettoyes, prépare, et présente graphiquement la progression de l’étudiant. L’émulation de groupe est obtenue en comparant la progression de l’étudiant à la progression générale de la classe. Afin d’avoir un retour immédiat, nous souhaitons rendre ce rapport de progression dynamique de sorte qu’il montre l’évolution en temps réel. Il est en effet important que l’étudiant puisse visualiser sur son rapport qu’il vient d’avancer en achevant à la seconde un exercice ! De plus, nous souhaitons asoscier cela à des récompenses sous forme de badges lorsque l’étudiant franchit une étape dans son apprentissage (de plus, des badges spéciaux pourraient être associés aux points bonus). La gestion des badges a été abordée dans la section dédiée à Moodle (voir 7). L’app Shiny de rapport de progression est développée dans le dépôt Github privé sdd_progress-report. Comme il contient du code sensible, il n’est pas disponible de manière publique. Par contre, les ensignants du cours y ont accès et le fichier README.md détaille son fonctionnement et contient du code pour le tester. Cette app Shiny est ensuite intégrée dans Moodle via un lien URL qui ouvre l’app dans une fenêtre interne et lui passe huit paramètres issus de Moodle afin de déterminer quel rapport il faut présenter. "],
["installation.html", "A Installation", " A Installation TODO: installation des outils logiciels nécessaires pour nos cours… "],
["références.html", "Références", " Références "]
]
